Turbo Assembler	 Version 4.1	    03/09/21 14:20:39	    Page 1
numout.asm



      1	0000			     .model tiny
      2	0000			     .code
      3
      4				     org 100h
      5
      6
      7				     ; Constants ===========================
      8
      9	      =0005		     BASE_NAME_LEN equ 5
     10	      =0014		     MAX_INP_LEN equ 20
     11	      =0014		     MAX_OUT_LEN equ 20
     12	      =0013		     MAX_NUM_LEN equ 19	     ; Maximum is needed for binary number. 16 is for number, 1	is for length
     13							     ;							      1	for 'b'	or  +
     14				     'o' or 'h'
     15							     ;							      1	for '$'
     16
     17	      =000A		     x1	= 10
     18	      =0046		     x2	= 70
     19
     20	      =000A		     y1	= 10
     21	      =0014		     y2	= 20
     22
     23	      =0654		     lu_coord =	(80 * y1 + x1) * 2
     24	      =0C94		     ld_coord =	(80 * y2 + x1) * 2
     25	      =06CC		     ru_coord =	(80 * y1 + x2) * 2
     26	      =0D0C		     rd_coord =	(80 * y2 + x2) * 2
     27
     28	      =B800		     videomem =	0b800h
     29
     30				     ;======================================
     31
     32
     33
     34	0100			     Start:
     35					     ;mov ax, 123		      ;	Number to convert
     36					     ;mov bx, 2			     ; Base of system number to	convert
     37					     ;mov di, (80*15 + 25) * 2	     ; Offest of message in VideoMemory
     38					     ;call NumberProcessing
     39
     40					     ;mov ax, 123		      ;	Number to convert
     41					     ;mov bx, 8			     ; Base of system number to	convert
     42					     ;mov di, (80*16 + 25) * 2		     ; Offest of message in VideoMemory
     43					     ;call NumberProcessing
     44
     45					     ;mov ax, 123		      ;	Number to convert
     46					     ;mov bx, 16		     ; Base of system number to	convert
     47					     ;mov di, (80*17 + 25) * 2	     ; Offest of message in VideoMemory
     48					     ;call NumberProcessing
     49
     50					     ;mov ax, 4c00h
     51					     ;int 21h
     52
     53
     54
     55					     ;==================================================================
     56					     ; Requires: decimal number	(up to 65535) to convert in three number systems
     57					     ;		 and print on screen in	ax
Turbo Assembler	 Version 4.1	    03/09/21 14:20:39	    Page 2
numout.asm



     58					     ;
     59					     ; Returns:	 pointer in si on the length of	number and beginning of	number in si + 1
     60					     ;
     61					     ; Notes:
     62					     ;
     63					     ; Damages:	 ----
     64					     ;==================================================================
     65					     global NumberProcessing
*Warning* numout.asm(64) Global	type doesn't match symbol type:	NUMBERPROCESSING
     66	0100				     NumberProcessing proc
     67
     68	0100  57				     push di		     ; There is	offset in di
     69	0101  E8 003A				     call WriteSystem
     70	0104  E8 0007				     call Convert	     ; Adding to output	number in another number system
     71	0107  5F				     pop di
     72
     73	0108  B4 1A				     mov ah, 1ah	     ; Colour of text to print
     74	010A  E8 0063				     call PushToVideo	     ; Pushing string in VideoMemory
     75	010D  C3			     ret
     76	010E				     endp
     77
     78
     79
     80					     ;====================================================================
     81					     ; Requires: decimal number	(up to 65535) to convert in ax,	pointer	on
     82					     ;		 output	message	in si and base of new number system in bx
     83					     ;
     84					     ;
     85					     ; Returns:	 pointer in si on output message, that contains
     86					     ;
     87					     ; Notes:
     88					     ;
     89					     ; Damages:	 ax, bx, cx, dx, si
     90					     ;====================================================================
     91					     global Convert
*Warning* numout.asm(90) Global	type doesn't match symbol type:	CONVERT
     92	010E				     Convert proc
     93
     94	010E  33 C9				     xor cx, cx
     95	0110  33 D2				     xor dx, dx	     ; For division error, when	(dx, ax) / bx is too big for ax
     96
     97	0112				 digit_proc:
     98	0112  F7 F3				     div bx
     99
    100	0114  E8 0012				     call NumInChar
    101	0117  52				     push dx
    102	0118  33 D2				     xor dx, dx
    103
    104	011A  41				     inc cx
    105	011B  0B C0				     or	ax, ax
    106	011D  75 F3				     jnz digit_proc
    107
    108	011F  00 4C FF				     add [si - 1], cl
    109
    110	0122				 digit_push:
    111	0122  5A				     pop dx
    112	0123  88 15				     mov [di], dl
Turbo Assembler	 Version 4.1	    03/09/21 14:20:39	    Page 3
numout.asm



    113	0125  47				     inc di
    114	0126  E2 FA				     loop digit_push
    115
    116	0128  C3			     ret
    117	0129				     endp
    118
    119
    120					     ;==================================================================
    121					     ; Requires: decimal number	(up to 15) to convert in dx
    122					     ;
    123					     ; Returns:	 symbol	(it's code) in dx, that	displays that number
    124					     ;
    125					     ; Notes:	 That is more universal, then using "add dx, '0'" in
    126					     ;		 Bin and Octal converting, but it's longer by 5	operations
    127					     ;
    128					     ; Damages:	 ----
    129					     ;==================================================================
    130					     global NumInChar
*Warning* numout.asm(129) Global type doesn't match symbol type: NUMINCHAR
    131	0129				     NumInChar proc
    132	0129  83 FA 0A				     cmp dx, 10
    133	012C  72 03				     jb	 easy
    134	012E  EB 07 90				     jmp hard
    135
    136	0131  83 C2 30			     easy:   add dx, '0'
    137	0134  EB 07 90				     jmp return
    138
    139	0137  83 EA 0A			     hard:   sub dx, 10
    140	013A  83 C2 41				     add dx, 'A'
    141
    142	013D				     return:
    143
    144	013D  C3			     ret
    145	013E				     endp
    146
    147
    148
    149					     ;==================================================================
    150					     ; Requires: decimal number, base of number	system in bx (2, 8 or 16)
    151					     ;
    152					     ; Returns:	 ----
    153					     ;
    154					     ; Notes:	 Writes	number system name in bytes with adress	in si
    155					     ;
    156					     ; Damages:	 si, di
    157					     ;==================================================================
    158					     global WriteSystem
*Warning* numout.asm(157) Global type doesn't match symbol type: WRITESYSTEM
    159	013E				     WriteSystem proc
    160
    161	013E  BF 0196r				     mov di, offset Output
    162	0141  C6 05 05				     mov byte ptr [di],	BASE_NAME_LEN
    163	0144  47				     inc di
    164
    165
    166	0145  83 FB 02				     cmp bx, 2
    167	0148  74 0A				     je	bin
Turbo Assembler	 Version 4.1	    03/09/21 14:20:39	    Page 4
numout.asm



    168	014A  83 FB 08				     cmp bx, 8
    169	014D  74 0B				     je	oct
    170	014F  83 FB 10				     cmp bx, 16
    171	0152  74 0C				     je	hex
    172
    173	0154  BE 01AAr				bin: mov si, offset Base_bin
    174	0157  EB 0D 90				     jmp write_base
    175
    176	015A  BE 01AFr				oct: mov si, offset Base_oct
    177	015D  EB 07 90				     jmp write_base
    178
    179	0160  BE 01B4r				hex: mov si, offset Base_hex
    180	0163  EB 01 90				     jmp write_base
    181
    182
    183	0166  8A 4D FF			 write_base: mov cl, byte ptr [di - 1]
    184	0169  32 ED				     xor ch, ch
    185
    186	016B  57				     push di
    187	016C  F3> A4				     rep movsb
    188	016E  5E				     pop si
    189
    190	016F  C3			     ret
    191	0170				     endp
    192
    193
    194
    195					     ;==================================================================
    196					     ; Requires: buffer	in si, buffer length in	cx, colour in ah
    197					     ;
    198					     ; Returns:	 string	in VideoMemory
    199					     ;
    200					     ; Notes:
    201					     ;
    202					     ; Damages:	 ax, cx, es, si, di
    203					     ;==================================================================
    204					     global PushToVideo
*Warning* numout.asm(203) Global type doesn't match symbol type: PUSHTOVIDEO
    205	0170				     PushToVideo proc
    206
    207	0170  06				     push es
    208
    209	0171  BA B800				     mov dx, videomem
    210	0174  8E C2				     mov es, dx
    211
    212	0176  8A 4C FF				     mov cl, [si - 1]
    213	0179  32 ED				     xor ch, ch
    214	017B  FC				     cld
    215
    216	017C  AC		      out_symb_forw: lodsb
    217	017D  AB				     stosw
    218	017E  E2 FC				     loop out_symb_forw
    219
    220	0180  07				     pop es
    221	0181  C3			     ret
    222	0182				     endp
    223
Turbo Assembler	 Version 4.1	    03/09/21 14:20:39	    Page 5
numout.asm



    224
    225	0182  14*(??)		     Input:  db	MAX_INP_LEN dup	(?)
    226
    227	0196  14*(??)		     Output: db	MAX_OUT_LEN dup	(?)
    228
    229	01AA  62 69 6E 3A 20	     Base_bin: db 'bin:	'
    230
    231	01AF  6F 63 74 3A 20	     Base_oct: db 'oct:	'
    232
    233	01B4  68 65 78 3A 20	     Base_hex: db 'hex:	'
    234
    235				     end Start
Turbo Assembler	 Version 4.1	    03/09/21 14:20:39	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/09/21"
??FILENAME			  Text	 "numout  "
??TIME				  Text	 "14:20:39"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 NUMOUT
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BASE_BIN			  Near	 DGROUP:01AA
BASE_HEX			  Near	 DGROUP:01B4
BASE_NAME_LEN			  Number 0005
BASE_OCT			  Near	 DGROUP:01AF
BIN				  Near	 DGROUP:0154
CONVERT				  Near	 DGROUP:010E
DIGIT_PROC			  Near	 DGROUP:0112
DIGIT_PUSH			  Near	 DGROUP:0122
EASY				  Near	 DGROUP:0131
HARD				  Near	 DGROUP:0137
HEX				  Near	 DGROUP:0160
INPUT				  Near	 DGROUP:0182
LD_COORD			  Number 0C94
LU_COORD			  Number 0654
MAX_INP_LEN			  Number 0014
MAX_NUM_LEN			  Number 0013
MAX_OUT_LEN			  Number 0014
NUMBERPROCESSING		  Near	 DGROUP:0100
NUMINCHAR			  Near	 DGROUP:0129
OCT				  Near	 DGROUP:015A
OUTPUT				  Near	 DGROUP:0196
OUT_SYMB_FORW			  Near	 DGROUP:017C
PUSHTOVIDEO			  Near	 DGROUP:0170
RD_COORD			  Number 0D0C
RETURN				  Near	 DGROUP:013D
RU_COORD			  Number 06CC
START				  Near	 DGROUP:0100
VIDEOMEM			  Number B800
WRITESYSTEM			  Near	 DGROUP:013E
WRITE_BASE			  Near	 DGROUP:0166
X1				  Number 000A
X2				  Number 0046
Y1				  Number 000A
Y2				  Number 0014
Turbo Assembler	 Version 4.1	    03/09/21 14:20:39	    Page 7
Symbol Table




Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  01B9 Word	  Public  CODE
Turbo Assembler	 Version 4.1	    03/09/21 14:20:39	    Page 8
Error Summary



*Warning* numout.asm(64) Global	type doesn't match symbol type:	NUMBERPROCESSING
*Warning* numout.asm(90) Global	type doesn't match symbol type:	CONVERT
*Warning* numout.asm(129) Global type doesn't match symbol type: NUMINCHAR
*Warning* numout.asm(157) Global type doesn't match symbol type: WRITESYSTEM
*Warning* numout.asm(203) Global type doesn't match symbol type: PUSHTOVIDEO
